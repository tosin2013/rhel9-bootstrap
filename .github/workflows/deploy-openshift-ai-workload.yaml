name: Deploy OpenShift AI Workload

on:
  workflow_dispatch:
    inputs:
      instance_size:
        description: 'Instance size (e.g., m6i.2xlarge)'
        required: true
        default: 'm6i.2xlarge'
      pull_secret_file:
        description: 'Path to the pull secret file'
        required: true
        default: '/home/lab-user/pull-secret.json'
      destroy:
        description: 'Destroy the cluster after deployment'
        required: false
        default: 'false'
      hostname:
        description: 'hostname'
        required: true
        default: hostname
      cluster_name:
        description: 'Cluster name'
        required: true
        default: 'test-cluster'
      base_domain:
        description: 'Base domain'
        required: true
        default: 'example.com'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up AWS credentials
      run: |
        echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "aws_region=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
        echo "cluster_name=${{ github.event.inputs.cluster_name }}" >> $GITHUB_ENV
        echo "base_domain=${{ github.event.inputs.base_domain }}" >> $GITHUB_ENV
        echo "pull_secret_file=${{ github.event.inputs.pull_secret_file }}" >> $GITHUB_ENV

    - name: SSH into RHEL9 Bastion and Deploy OpenShift
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ github.event.inputs.hostname }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        command_timeout: 60m
        script: |
          sudo yum install git -y
          if [ -d "/opt/rhel9-bootstrap" ]; then
            cd /opt/rhel9-bootstrap
            git config --global --add safe.directory /opt/rhel9-bootstrap
            git config pull.rebase false
            git pull
          else
            cd /opt/
            sudo usermod -aG users ${{ secrets.USERNAME }}
            sudo chown -R root:users /opt
            sudo chmod -R g+w /opt
            git clone https://github.com/tosin2013/rhel9-bootstrap.git
          fi
          cd /opt/rhel9-bootstrap
          if ! grep -q "export AWS_SECRET_ACCESS_KEY=" /home/${{ secrets.USERNAME }}/.bashrc; then
            echo "export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> /home/${{ secrets.USERNAME }}/.bashrc
          fi
          if ! grep -q "export AWS_REGION=" /home/${{ secrets.USERNAME }}/.bashrc; then
            echo "export AWS_REGION=${{ secrets.AWS_REGION }}" >> /home/${{ secrets.USERNAME }}/.bashrc
          fi
          if ! grep -q "export AWS_REGION=" /home/${{ secrets.USERNAME }}/.bashrc; then
            echo "export AWS_REGION=${{ secrets.AWS_REGION }}" >> /home/${{ secrets.USERNAME }}/.bashrc
          fi
          if ! grep -q "export BASE_DOMAIN=${{ github.event.inputs.base_domain }}" /home/${{ secrets.USERNAME }}/.bashrc; then
            echo "export BASE_DOMAIN=${{ github.event.inputs.base_domain }}" >> /home/${{ secrets.USERNAME }}/.bashrc
          fi
          if ! grep -q "export CLUSTER_NAME=${{ github.event.inputs.cluster_name }}" /home/${{ secrets.USERNAME }}/.bashrc; then
            echo "export CLUSTER_NAME=${{ github.event.inputs.cluster_name }}" >> /home/${{ secrets.USERNAME }}/.bashrc
          fi
          if ! grep -q "export PULL_SECRET_FILE=${{ github.event.inputs.pull_secret_file }}" /home/${{ secrets.USERNAME }}/.bashrc; then
            echo "export PULL_SECRET_FILE=${{ github.event.inputs.pull_secret_file }}" >> /home/${{ secrets.USERNAME }}/.bashrc
          fi

          source /home/${{ secrets.USERNAME }}/.bashrc
          sudo -E ./scripts/openshift-ai-workload.sh ${{ github.event.inputs.instance_size }} ${{ github.event.inputs.region }} ${{ github.event.inputs.destroy == 'true' && '--destroy' || '' }} 
