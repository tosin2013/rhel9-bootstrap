name: Deploy Via AgnosticD
on:
  workflow_dispatch:
    inputs:
      hostname:
        description: 'hostname'
        required: false
        default: hostname
      kubeconfig_path:
        description: 'Path to KUBECONFIG file'
        required: false
        default: /root/cluster/auth/kubeconfig
      agnosticd_repo:
        description: 'AgnosticD repository URL'
        required: false
        default: https://github.com/tosin2013/agnosticd.git
      agnosticd_workload:
        description: AgnosticD workload to deploy
        required: true
        type: choice
        options:
          - ocp4_workload_redhat_developer_hub
      agnosticd_action:
        description: AgnosticD action to perform (create/remove)
        required: true
        default: create
      guid:
        description: GUID
        required: true
        default: 1234
      openshift_user:
        description: OpenShift user
        required: true
        default: admin

jobs:
  agnosticd_deployment:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      uses: appleboy/scp-action@v0.1.10
      with:
        host: ${{ env.HOSTNAME }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        source: "dependencies.tar.gz"
        target: "/tmp/dependencies.tar.gz"

    - name: Clone or update AgnosticD repository
      run: |
        if [ -d "$HOME/agnosticd" ]; then
          cd $HOME/agnosticd
          git pull
        else
          git clone ${{ inputs.agnosticd_repo }} $HOME/agnosticd
        fi

    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.KEY }}" > ~/.ssh/github-actions
        chmod 600 ~/.ssh/github-actions

    - name: Create Ansible hosts file
      run: |
        echo "[all]" > /tmp/hosts 
        echo "control ansible_host=${{ inputs.hostname }} ansible_connection=ssh ansible_user=${{ secrets.USERNAME }} ansible_ssh_private_key_file=~/.ssh/github-actions" >> /tmp/hosts

    - name: Copy extra_vars.yml to target system
      uses: appleboy/scp-action@v0.1.10
      with:
        host: ${{ env.HOSTNAME }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        source: "agnosticd_templates/ocp-workloads/${{ inputs.agnosticd_workload }}.yaml"
        target: "/extra_vars.yml"

    - name: Run Ansible Playbook for Create
      if: ${{ inputs.agnosticd_action == 'create' }}
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ env.HOSTNAME }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        command_timeout: 30m
        script: |
          export KUBECONFIG=${{ inputs.kubeconfig_path }}
          ansible-playbook -i /tmp/hosts $HOME/agnosticd/ansible/configs/ocp-workloads/main.yml \
            -e "ansible_user=${{ secrets.USERNAME }}" \
            -e "ocp_username=${{ inputs.openshift_user }}" \
            -e "ansible_password=${{ secrets.ANSIBLE_PASSWORD }}" \
            -e "ocp_workload=${{ inputs.agnosticd_workload }}" \
            -e "silent=False" \
            -e "guid=${{ inputs.guid }}" \
            -e "ACTION=${{ inputs.agnosticd_action }}" \
            -e "@/extra_vars.yml"

    - name: Run Ansible Playbook for Delete
      if: ${{ inputs.agnosticd_action == 'remove' }}
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ env.HOSTNAME }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        command_timeout: 30m
        script: |
          export KUBECONFIG=${{ inputs.kubeconfig_path }}
          ansible-playbook -i /tmp/hosts $HOME/agnosticd/ansible/configs/ocp-workloads/destroy.yml \
            -e "ansible_user=${{ secrets.USERNAME }}" \
            -e "ocp_username=${{ inputs.openshift_user }}" \
            -e "ansible_password=${{ secrets.ANSIBLE_PASSWORD }}" \
            -e "ocp_workload=${{ inputs.agnosticd_workload }}" \
            -e "silent=False" \
            -e "guid=${{ inputs.guid }}" \
            -e "ACTION=destroy" \
            -e "@/extra_vars.yml"
